@using BlazorStrap
@using aLice_utils.Shared.Models.Transaction
@using aLice_utils.Shared.Models

<BSRow MarginBottom="Margins.Medium">
    <BSInputGroup>
        <span class="@BS.Input_Group_Text">SignerPublicKey</span>
        <BSInput InputType="InputType.Text" placeholder="空欄の場合はaLiceアカウント" @bind-Value="InnerTransaction.SignerPublicKey"/>
    </BSInputGroup>
    <ValidationMessage For="@(() => InnerTransaction.SignerPublicKey)" />
</BSRow>
<BSRow MarginBottom="Margins.Medium">
    <BSInputGroup>
        <span class="@BS.Input_Group_Text">Restriction</span>
        <BSInputCheckbox CheckedValue="@("ALLOW")" @bind-Value="InnerTransaction.BLOCK" UnCheckedValue="@("BLOCK")" IsToggle="true" Color="BSColor.Secondary">
            @InnerTransaction.BLOCK</BSInputCheckbox>
    </BSInputGroup>
</BSRow>
<BSRow MarginBottom="Margins.Medium">
    <BSLabel Class="fw-bold small">RestrictionAdditions</BSLabel>
    <BSRow MarginBottom="Margins.Small">
        <BSDropdown>
            <Toggler><BSToggle IsButton="true" Color="BSColor.Secondary">Add Transaction</BSToggle></Toggler>
            <Content>
                @foreach (var option in TransactionTypeExtension.GetInnerTransactionTypeList())
                {
                    <BSDropdownItem OnClick="() => AddRestrictionAdditions(option)">@option</BSDropdownItem>
                }
            </Content>
        </BSDropdown>`
        </BSRow>
    
    @foreach (var transaction in InnerTransaction.RestrictionAdditions)
    {
        <BSRow MarginBottom="Margins.Small">
            <BSInputGroup>
                <BSInput InputType="InputType.Text" @bind-Value="transaction.Transaction" IsDisabled="true"/>
                <BSButton Color="BSColor.Secondary" IsOutlined="true" OnClick="() => RemoveRestrictionAdditions(transaction)">-</BSButton>
            </BSInputGroup>
            <ValidationMessage For=@(() => transaction.Transaction)/>
            </BSRow>
    }
</BSRow>
<BSRow MarginBottom="Margins.Medium">
    <BSLabel Class="fw-bold small">RestrictionDeletions</BSLabel>
    <BSRow MarginBottom="Margins.Small">
        <BSDropdown MarginBottom="Margins.Small">
            <Toggler><BSToggle IsButton="true" Color="BSColor.Secondary">Add Transaction</BSToggle></Toggler>
            <Content>
                @foreach (var option in TransactionTypeExtension.GetInnerTransactionTypeList())
                {
                    <BSDropdownItem OnClick="() => AddRestrictionDeletions(option)">@option</BSDropdownItem>
                }
            </Content>
        </BSDropdown>
        </BSRow>
        
        @foreach (var transaction in InnerTransaction.RestrictionDeletions)
        {
            <BSRow MarginBottom="Margins.Small">
                <BSInputGroup>
                    <BSInput InputType="InputType.Text" @bind-Value="transaction.Transaction" IsDisabled="true"/>
                    <BSButton Color="BSColor.Secondary" IsOutlined="true" OnClick="() => RemoveRestrictionDeletions(transaction)">-</BSButton>
                </BSInputGroup>
                <ValidationMessage For=@(() => transaction.Transaction)/>
                </BSRow>
        }
</BSRow>
@code {
    [Parameter]
    public InnerAccountOperationRestrictionTransaction InnerTransaction { get; set; } = new ();
    
    [Parameter]
    public TransactionMeta TransactionMeta { get; set; } = new ();
    
    private void AddRestrictionAdditions(string transactionType)
    {
        InnerTransaction.RestrictionAdditions.Add(new TransactionClass(transactionType));
    }
    
    private void RemoveRestrictionAdditions(TransactionClass transaction)
    {
        InnerTransaction.RestrictionAdditions.Remove(transaction);
    }
    
    private void AddRestrictionDeletions(string transactionType)
    {
        InnerTransaction.RestrictionDeletions.Add(new TransactionClass(transactionType));
    }
    
    private void RemoveRestrictionDeletions(TransactionClass transaction)
    {
        InnerTransaction.RestrictionDeletions.Remove(transaction);
    }
}