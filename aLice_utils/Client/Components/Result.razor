@using BlazorStrap
@inject NavigationManager NavigationManager

@if (showSpinner)
{
    
    <BSContainer>
        <BSRow MarginBottom="Margins.Medium" Justify="Justify.Center">
            <BSCol Column="2">
                <BSSpinner Color="BSColor.Secondary" Class="align-content-center"/>
            </BSCol>
        </BSRow>
    </BSContainer>
}
@if (IsOfflineAnnounceResult)
{
    <BSRow MarginBottom="Margins.Medium">
        <BSLabel Class="text-success">
            @OfflineAnnounceResult
        </BSLabel>
    </BSRow>
}
@if (IsOfflineAnnounceResultError)
{
    <BSRow MarginBottom="Margins.Medium">
        <BSLabel Class="text-danger">
            @OfflineAnnounceResultError
        </BSLabel>
    </BSRow>
}
@if (isResult)
{
    if (hash != null)
    {
        <BSRow MarginBottom="Margins.Medium">
            <BSInputGroup>
                <span class="@BS.Input_Group_Text">Hash</span>
                <BSInput InputType="InputType.Text" placeholder="hash" @bind-Value="hash"/>
            </BSInputGroup>
        </BSRow>   
    }
    <BSRow MarginBottom="Margins.Medium">
        <BSInputGroup>
            <span class="@BS.Input_Group_Text">aLice code</span>
            <BSInput InputType="InputType.TextArea" placeholder="aLice" @bind-Value="alice"/>
        </BSInputGroup>
    </BSRow>
    <BSRow MarginBottom="Margins.Medium">
        <BSCol>
            <BSButton Color="BSColor.Success" OnClick="@OpenAlice">To aLice</BSButton>
        </BSCol>
    </BSRow>  
    <BSRow MarginBottom="Margins.Medium">
        <BSImage Source="@qrSource" Class="img-fluid"></BSImage>
    </BSRow> 
}

@code {
    [Parameter]
    public string? qrSource { get; set; }
    
    [Parameter]
    public string? alice {get; set;}

    [Parameter]
    public bool isResult { get; set; }
    
    [Parameter]
    public bool showSpinner { get; set; }
    
    [Parameter]
    public string? hash { get; set; }

    [Parameter]
    public bool IsOfflineAnnounceResult { get; set; } = false;
    
    [Parameter]
    public bool IsOfflineAnnounceResultError { get; set; } = false;

    [Parameter]
    public string OfflineAnnounceResult { get; set; } = "";
    
    [Parameter]
    public string OfflineAnnounceResultError { get; set; } = "";
    
    private void OpenAlice()
    {
        if (alice != null) NavigationManager.NavigateTo(alice);
    }
}
